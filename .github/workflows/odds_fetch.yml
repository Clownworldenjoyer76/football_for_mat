name: Odds Fetch (API)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"  # every 30 minutes UTC

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TARGET_SEASON: '2025'
      SEASON: '2025'            # some scripts read SEASON instead
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure data dirs
        run: mkdir -p data/props data/logs data/odds

      - name: Fetch raw odds/props
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
          TARGET_SEASON: ${{ env.TARGET_SEASON }}
          SEASON: ${{ env.SEASON }}
        run: python scripts/01_fetch_odds.py

      - name: Canonicalize raw props feed
        env:
          TARGET_SEASON: ${{ env.TARGET_SEASON }}
          SEASON: ${{ env.SEASON }}
        run: python scripts/01_canonicalize_raw.py

      - name: Show props_current summary (debug)
        run: |
          set -e
          if [ ! -s data/props/props_current.csv ]; then
            echo "props_current.csv is missing or empty"; exit 1
          fi
          echo "== file path =="; ls -lh data/props/props_current.csv
          echo "== head =="
          head -n 5 data/props/props_current.csv || true
          echo "== seasons present =="
          python - <<'PY'
          import pandas as pd
          df = pd.read_csv("data/props/props_current.csv")
          print(sorted(set(pd.to_numeric(df.get("season"), errors="coerce").dropna().astype(int))))
          print("rows:", len(df))
          print("sample markets:", sorted(df.get("market", pd.Series([])).astype(str).unique())[:8])
          PY

      - name: Guard: must contain TARGET_SEASON
        run: |
          python - <<'PY'
          import pandas as pd, sys
          df = pd.read_csv("data/props/props_current.csv")
          seasons = sorted(set(pd.to_numeric(df.get("season"), errors="coerce").dropna().astype(int)))
          print("Seasons present:", seasons)
          if 2025 not in seasons:
              sys.exit("ERROR: TARGET_SEASON 2025 not found in props_current.csv")
          PY

      - name: Commit refreshed props_current (only if changed)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git add data/props/props_current.csv -f
          git diff --cached --quiet && echo "No changes to commit" || git commit -m "[fetch] refresh props_current (season $TARGET_SEASON)"
          git push || true

      - name: Upload artifact (debug)
        uses: actions/upload-artifact@v4
        with:
          name: props-current-${{ github.run_id }}
          path: data/props/props_current.csv
          if-no-files-found: error
          retention-days: 3
