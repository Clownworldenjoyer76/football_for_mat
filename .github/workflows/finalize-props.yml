name: finalize-props

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  finalize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history for rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyarrow fastparquet || true

      - name: Show inputs (if present)
        run: |
          ls -lh data/props/history_pending.csv 2>/dev/null || echo "no pending file"
          ls -lh data/weekly/latest.csv         2>/dev/null || echo "no weekly latest"

      - name: Finalize props → stamp outcomes
        run: |
          set -e
          python scripts/08_finalize_props_outcomes.py \
            --pending data/props/history_pending.csv \
            --weekly  data/weekly/latest.csv \
            --out     data/props/history_props_with_outcomes.csv \
            --join    player_week

      - name: Show outputs
        run: |
          sed -n '1,20p' data/props/history_props_with_outcomes.csv 2>/dev/null || true
          wc -l data/props/history_props_with_outcomes.csv 2>/dev/null || true

      # ---- FIX: fetch + rebase (or merge) before pushing to main ----
      - name: Commit finalized history (only if outcomes exist)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Ensure we're up to date with remote before committing
          git fetch origin main
          git rebase origin/main || git merge --no-edit origin/main

          # Stage only the relevant files
          if [ -f data/props/history_props_with_outcomes.csv ]; then
            git add -f data/props/history_props_with_outcomes.csv
          fi
          # history_pending may have been removed by the script — reflect that
          git rm -f data/props/history_pending.csv 2>/dev/null || true

          # Commit only if there are staged changes
          if git diff --cached --quiet; then
            echo "No finalized history changes to commit."
            exit 0
          fi

          git commit -m "Finalize props outcomes: update history_props_with_outcomes.csv (run $GITHUB_RUN_ID)"
          git push origin HEAD:main

      - name: Upload finalized history (artifact, 90-day retention)
        uses: actions/upload-artifact@v4
        with:
          name: history-props-with-outcomes-${{ github.run_id }}
          path: data/props/history_props_with_outcomes.csv
          if-no-files-found: warn
          retention-days: 90
